/******* TABLES *******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos(
 [AlbumId] [int] NOT NULL,
 [PhotoId] [int] NOT NULL,
 CONSTRAINT PK_{objectQualifier}Connect_FlickrGallery_AlbumPhotos PRIMARY KEY CLUSTERED 
(
 [PhotoId] ASC,
 [AlbumId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums(
 [AlbumId] [int] IDENTITY(1,1) NOT NULL,
 [ModuleId] [int] NOT NULL,
 [PhotosetId] [varchar](200) NOT NULL,
 [Title] [nvarchar](1000) NULL,
 [PrimaryPhotoId] [int] NULL,
 CONSTRAINT PK_{objectQualifier}Connect_FlickrGallery_Albums PRIMARY KEY CLUSTERED 
(
 [AlbumId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

/******* STRUCTURE *******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_AlbumPhotos_Albums') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_AlbumPhotos_Albums FOREIGN KEY([AlbumId])
REFERENCES {databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums ([AlbumId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_AlbumPhotos_Albums') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos CHECK CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_AlbumPhotos_Albums
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Albums_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Albums_Modules FOREIGN KEY([ModuleId])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Albums_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums CHECK CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Albums_Modules
GO

/******* VIEWS *******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_AlbumPhotos'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_AlbumPhotos
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_AlbumPhotos
AS
SELECT
 ap.AlbumId,
 p.*,
 ph.OwnerName,
 ph.FlickrId PhotographerFlickrId
FROM {databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos ap
 INNER JOIN {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos p ON ap.PhotoId=p.PhotoId
 INNER JOIN {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers ph ON p.PhotographerId=ph.PhotographerId
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Albums'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Albums
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Albums
AS
SELECT
 a.*,
 p.LargeHeight,
 p.LargeSquareThumbnailUrl,
 p.LargeUrl,
 p.LargeWidth,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_FlickrGallery_AlbumPhotos ap WHERE ap.AlbumId=a.AlbumId) NrPhotos
FROM {databaseOwner}{objectQualifier}Connect_FlickrGallery_Albums a
 LEFT JOIN {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos p ON a.PrimaryPhotoId=p.PhotoId
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photographers'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photographers
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_PhotoGraphers
AS
SELECT
 ph.*,
 u.DisplayName,
 u.Username,
 u.Email
FROM {databaseOwner}{objectQualifier}Connect_FlickrGallery_PhotoGraphers ph
 LEFT JOIN {databaseOwner}{objectQualifier}Users u ON ph.UserId=u.UserID
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photos'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photos
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photos
AS
SELECT
 p.*,
 ph.OwnerName,
 ph.FlickrId PhotographerFlickrId
FROM {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos p
 INNER JOIN {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers ph ON p.PhotographerId=ph.PhotographerId
GO
