/******* TABLES *******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers(
 [PhotographerId] [int] IDENTITY(1,1) NOT NULL,
 [ModuleId] [int] NOT NULL,
 [FlickrId] [nvarchar](100) NOT NULL,
 [OwnerName] [nvarchar](100) NOT NULL,
 [UserId] [int] NULL,
 CONSTRAINT PK_{objectQualifier}Connect_FlickrGallery_Photographers PRIMARY KEY CLUSTERED 
(
 [PhotographerId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos(
 [PhotoId] [int] IDENTITY(1,1) NOT NULL,
 [FlickrId] [varchar](200) NOT NULL,
 [ModuleId] [int] NOT NULL,
 [PhotographerId] [int] NOT NULL,
 [Title] [nvarchar](200) NULL,
 [DateTaken] [datetime] NOT NULL,
 [DateAddedToGroup] [datetime] NULL,
 [LargeSquareThumbnailUrl] [nvarchar](500) NULL,
 [LargeHeight] [int] NULL,
 [LargeWidth] [int] NULL,
 [LargeUrl] [nvarchar](500) NULL,
 CONSTRAINT PK_{objectQualifier}Connect_FlickrGallery_Photos PRIMARY KEY CLUSTERED 
(
 [PhotoId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

/******* STRUCTURE *******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Photographers_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Photographers_Modules FOREIGN KEY([ModuleId])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Photographers_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers CHECK CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Photographers_Modules
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Photos_Photographers') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Photos_Photographers FOREIGN KEY([PhotographerId])
REFERENCES {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers ([PhotographerId])
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Photos_Photographers') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos CHECK CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Photos_Photographers
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Photos_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Photos_Modules FOREIGN KEY([ModuleId])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_FlickrGallery_Photos_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos CHECK CONSTRAINT FK_{objectQualifier}Connect_FlickrGallery_Photos_Modules
GO

/******* TRIGGERS *******/
/******* VIEWS *******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photographers'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photographers
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_PhotoGraphers
AS
SELECT
 ph.*,
 u.DisplayName,
 u.Username,
 u.Email
FROM {databaseOwner}{objectQualifier}Connect_FlickrGallery_PhotoGraphers ph
 LEFT JOIN {databaseOwner}{objectQualifier}Users u ON ph.UserId=u.UserID
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photos'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photos
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_FlickrGallery_Photos
AS
SELECT
 p.*,
 ph.OwnerName,
 ph.FlickrId PhotographerFlickrId
FROM {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photos p
 INNER JOIN {databaseOwner}{objectQualifier}Connect_FlickrGallery_Photographers ph ON p.PhotographerId=ph.PhotographerId
GO

-- new scheduled task
INSERT INTO {databaseOwner}[{objectQualifier}Schedule]
           ([TypeFullName]
           ,[TimeLapse]
           ,[TimeLapseMeasurement]
           ,[RetryTimeLapse]
           ,[RetryTimeLapseMeasurement]
           ,[RetainHistoryNum]
           ,[AttachToEvent]
           ,[CatchUpEnabled]
           ,[Enabled]
           ,[ObjectDependencies]
           ,[Servers]
           ,[CreatedByUserID]
           ,[CreatedOnDate]
           ,[LastModifiedByUserID]
           ,[LastModifiedOnDate]
           ,[FriendlyName])
     VALUES
           ('Connect.DNN.Modules.FlickrGallery.Common.FlickrGalleryService, Connect.DNN.Modules.FlickrGallery'
           ,1
           ,'h'
           ,5
           ,'m'
           ,20
           ,''
           ,0
           ,1
           ,''
           ,null
           ,-1
           ,GETDATE()
           ,-1
           ,GETDATE()
           ,'Connect Flickr Gallery Synchronizer')
GO


